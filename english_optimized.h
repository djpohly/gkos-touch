#ifndef ENGLISH_OPTIMIZED_H_
#define ENGLISH_OPTIMIZED_H_

#include <X11/Xlib.h>
#include <X11/keysym.h>

#include "chorder.h"

enum chordmap {
	MAP_DEFAULT,
	MAP_NUMBERS,
	MAP_SYMBOLS,
};

struct chord_entry map[][64] = {
	[MAP_DEFAULT] = {
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_a},
		{.type=TYPE_KEY, .arg.code=XK_u},
		{.type=TYPE_KEY, .arg.code=XK_o},
		{.type=TYPE_KEY, .arg.code=XK_c},
		{.type=TYPE_KEY, .arg.code=XK_d},
		{.type=TYPE_KEY, .arg.code=XK_s},
		{.type=TYPE_KEY, .arg.code=XK_BackSpace},
		{.type=TYPE_KEY, .arg.code=XK_i},
		{.type=TYPE_KEY, .arg.code=XK_Up},
		{.type=TYPE_KEY, .arg.code=XK_apostrophe},
		{.type=TYPE_KEY, .arg.code=XK_p},
		{.type=TYPE_KEY, .arg.code=XK_exclam},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_w},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_e},
		{.type=TYPE_KEY, .arg.code=XK_minus},
		{.type=TYPE_MOD, .arg.code=XK_Shift_L},
		{.type=TYPE_KEY, .arg.code=XK_q},
		{.type=TYPE_KEY, .arg.code=XK_comma},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_m},
		{.type=TYPE_KEY, .arg.code=XK_Left},
		{.type=TYPE_KEY, .arg.code=XK_t},
		{.type=TYPE_KEY, .arg.code=XK_h},
		{.type=TYPE_KEY, .arg.code=XK_g},
		{.type=TYPE_KEY, .arg.code=XK_Prior},
		{.type=TYPE_KEY, .arg.code=XK_j},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_slash},
		{.type=TYPE_KEY, .arg.code=XK_Escape},
		{.type=TYPE_KEY, .arg.code=XK_r},
		{.type=TYPE_KEY, .arg.code=XK_question},
		{.type=TYPE_KEY, .arg.code=XK_period},
		{.type=TYPE_KEY, .arg.code=XK_f},
		{.type=TYPE_KEY, .arg.code=XK_Down},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_v},
		{.type=TYPE_KEY, .arg.code=XK_Home},
		{.type=TYPE_KEY, .arg.code=XK_l},
		{.type=TYPE_KEY, .arg.code=XK_x},
		{.type=TYPE_KEY, .arg.code=XK_y},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_z},
		{.type=TYPE_MAP, .arg.map=MAP_SYMBOLS},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_MOD, .arg.code=XK_Control_L},
		{.type=TYPE_KEY, .arg.code=XK_n},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_b},
		{.type=TYPE_KEY, .arg.code=XK_backslash},
		{.type=TYPE_KEY, .arg.code=XK_k},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_Next},
		{.type=TYPE_MOD, .arg.code=XK_Alt_L},
		{.type=TYPE_KEY, .arg.code=XK_space},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_Right},
		{.type=TYPE_KEY, .arg.code=XK_Return},
		{.type=TYPE_KEY, .arg.code=XK_End},
		{.type=TYPE_KEY, .arg.code=XK_Tab},
		{.type=TYPE_KEY, .arg.code=XK_Delete},
		{.type=TYPE_MAP, .arg.map=MAP_NUMBERS},
	},
	[MAP_NUMBERS] = {
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_1},
		{.type=TYPE_KEY, .arg.code=XK_2},
		{.type=TYPE_KEY, .arg.code=XK_plus},
		{.type=TYPE_KEY, .arg.code=XK_3},
		{.type=TYPE_KEY, .arg.code=XK_parenleft},
		{.type=TYPE_KEY, .arg.code=XK_asterisk},
		{.type=TYPE_KEY, .arg.code=XK_BackSpace},
		{.type=TYPE_KEY, .arg.code=XK_4},
		{.type=TYPE_KEY, .arg.code=XK_Up},
		{.type=TYPE_KEY, .arg.code=XK_apostrophe},
		{.type=TYPE_KEY, .arg.code=XK_percent},
		{.type=TYPE_KEY, .arg.code=XK_exclam},
		{.type=TYPE_KEY, .arg.code=XK_bracketright},
		{.type=TYPE_KEY, .arg.code=XK_dollar},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_5},
		{.type=TYPE_KEY, .arg.code=XK_minus},
		{.type=TYPE_MOD, .arg.code=XK_Shift_L},
		{.type=TYPE_KEY, .arg.code=XK_equal},
		{.type=TYPE_KEY, .arg.code=XK_comma},
		{.type=TYPE_KEY, .arg.code=XK_greater},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_Left},
		{.type=TYPE_KEY, .arg.code=XK_0},
		{.type=TYPE_KEY, .arg.code=XK_7},
		{.type=TYPE_KEY, .arg.code=XK_8},
		{.type=TYPE_KEY, .arg.code=XK_Prior},
		{.type=TYPE_KEY, .arg.code=XK_9},
		{.type=TYPE_KEY, .arg.code=XK_asciitilde},
		{.type=TYPE_KEY, .arg.code=XK_slash},
		{.type=TYPE_KEY, .arg.code=XK_Escape},
		{.type=TYPE_KEY, .arg.code=XK_6},
		{.type=TYPE_KEY, .arg.code=XK_question},
		{.type=TYPE_KEY, .arg.code=XK_period},
		{.type=TYPE_KEY, .arg.code=XK_asciicircum},
		{.type=TYPE_KEY, .arg.code=XK_Down},
		{.type=TYPE_KEY, .arg.code=XK_braceright},
		{.type=TYPE_KEY, .arg.code=XK_sterling},
		{.type=TYPE_KEY, .arg.code=XK_Home},
		{.type=TYPE_KEY, .arg.code=XK_parenright},
		{.type=TYPE_KEY, .arg.code=XK_bracketleft},
		{.type=TYPE_KEY, .arg.code=XK_less},
		{.type=TYPE_KEY, .arg.code=XK_Insert},
		{.type=TYPE_KEY, .arg.code=XK_braceleft},
		{.type=TYPE_MAP, .arg.map=MAP_SYMBOLS},
		{.type=TYPE_KEY, .arg.code=XK_section},
		{.type=TYPE_MOD, .arg.code=XK_Control_L},
		{.type=TYPE_KEY, .arg.code=XK_at},
		{.type=TYPE_KEY, .arg.code=XK_numbersign},
		{.type=TYPE_KEY, .arg.code=XK_onehalf},
		{.type=TYPE_KEY, .arg.code=XK_backslash},
		{.type=TYPE_KEY, .arg.code=XK_ampersand},
		{.type=TYPE_KEY, .arg.code=XK_mu},
		{.type=TYPE_KEY, .arg.code=XK_Next},
		{.type=TYPE_MOD, .arg.code=XK_Alt_L},
		{.type=TYPE_KEY, .arg.code=XK_space},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_Right},
		{.type=TYPE_KEY, .arg.code=XK_Return},
		{.type=TYPE_KEY, .arg.code=XK_End},
		{.type=TYPE_KEY, .arg.code=XK_Tab},
		{.type=TYPE_KEY, .arg.code=XK_Delete},
		{.type=TYPE_MAP, .arg.map=MAP_NUMBERS},
	},
	[MAP_SYMBOLS] = {
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_1},
		{.type=TYPE_KEY, .arg.code=XK_2},
		{.type=TYPE_KEY, .arg.code=XK_plus},
		{.type=TYPE_KEY, .arg.code=XK_3},
		{.type=TYPE_KEY, .arg.code=XK_parenleft},
		{.type=TYPE_KEY, .arg.code=XK_asterisk},
		{.type=TYPE_KEY, .arg.code=XK_BackSpace},
		{.type=TYPE_KEY, .arg.code=XK_4},
		{.type=TYPE_KEY, .arg.code=XK_Up},
		{.type=TYPE_KEY, .arg.code=XK_guillemotleft},
		{.type=TYPE_KEY, .arg.code=XK_percent},
		{.type=TYPE_KEY, .arg.code=XK_bar},
		{.type=TYPE_KEY, .arg.code=XK_bracketright},
		{.type=TYPE_KEY, .arg.code=XK_dollar},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_5},
		{.type=TYPE_KEY, .arg.code=XK_guillemotright},
		{.type=TYPE_MOD, .arg.code=XK_Shift_L},
		{.type=TYPE_KEY, .arg.code=XK_equal},
		{.type=TYPE_KEY, .arg.code=XK_semicolon},
		{.type=TYPE_KEY, .arg.code=XK_greater},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_Left},
		{.type=TYPE_KEY, .arg.code=XK_0},
		{.type=TYPE_KEY, .arg.code=XK_7},
		{.type=TYPE_KEY, .arg.code=XK_8},
		{.type=TYPE_KEY, .arg.code=XK_Prior},
		{.type=TYPE_KEY, .arg.code=XK_9},
		{.type=TYPE_KEY, .arg.code=XK_asciitilde},
		{.type=TYPE_KEY, .arg.code=XK_slash},
		{.type=TYPE_KEY, .arg.code=XK_Escape},
		{.type=TYPE_KEY, .arg.code=XK_6},
		{.type=TYPE_KEY, .arg.code=XK_asciitilde},
		{.type=TYPE_KEY, .arg.code=XK_colon},
		{.type=TYPE_KEY, .arg.code=XK_asciicircum},
		{.type=TYPE_KEY, .arg.code=XK_Down},
		{.type=TYPE_KEY, .arg.code=XK_braceright},
		{.type=TYPE_KEY, .arg.code=XK_sterling},
		{.type=TYPE_KEY, .arg.code=XK_Home},
		{.type=TYPE_KEY, .arg.code=XK_parenright},
		{.type=TYPE_KEY, .arg.code=XK_bracketleft},
		{.type=TYPE_KEY, .arg.code=XK_less},
		{.type=TYPE_KEY, .arg.code=XK_degree},
		{.type=TYPE_KEY, .arg.code=XK_braceleft},
		{.type=TYPE_MAP, .arg.map=MAP_SYMBOLS},
		{.type=TYPE_KEY, .arg.code=XK_section},
		{.type=TYPE_MOD, .arg.code=XK_Control_L},
		{.type=TYPE_KEY, .arg.code=XK_at},
		{.type=TYPE_KEY, .arg.code=XK_numbersign},
		{.type=TYPE_KEY, .arg.code=XK_onehalf},
		{.type=TYPE_KEY, .arg.code=XK_backslash},
		{.type=TYPE_KEY, .arg.code=XK_ampersand},
		{.type=TYPE_KEY, .arg.code=XK_mu},
		{.type=TYPE_KEY, .arg.code=XK_Next},
		{.type=TYPE_MOD, .arg.code=XK_Alt_L},
		{.type=TYPE_KEY, .arg.code=XK_space},
		{.type=TYPE_NONE, .arg.code=NoSymbol},
		{.type=TYPE_KEY, .arg.code=XK_Right},
		{.type=TYPE_KEY, .arg.code=XK_Return},
		{.type=TYPE_KEY, .arg.code=XK_End},
		{.type=TYPE_KEY, .arg.code=XK_Tab},
		{.type=TYPE_KEY, .arg.code=XK_Delete},
		{.type=TYPE_MAP, .arg.map=MAP_NUMBERS},
	},
};

#endif
